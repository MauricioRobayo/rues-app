import { getCompanyRecordFromPathSegment } from "@/app/[company]/getCompanyRecordFromPathSegment";
import { formatNit } from "@/app/format-nit";
import { dateFormatter } from "@/app/formatters";
import { formatDistanceToNowStrict } from "date-fns";
import { es } from "date-fns/locale/es";
import type { Metadata } from "next";
import { getVerificationDigit } from "nit-verifier";

interface PageProps {
  params: Promise<{ company: string }>;
}

export const dynamic = "force-static";

export async function generateMetadata({
  params,
}: PageProps): Promise<Metadata> {
  console.log({ params });
  const { company } = await params;
  const companyRecord = await getCompanyRecordFromPathSegment(company);
  const formattedNit = formatNit(companyRecord.nit);
  return {
    title: `${companyRecord.businessName} - NIT ${formattedNit}`,
    // description: "Generated by create next app",
  };
}

export default async function page({ params }: PageProps) {
  const { company } = await params;
  const companyRecord = await getCompanyRecordFromPathSegment(company);
  const formattedNit = formatNit(companyRecord.nit);

  const dv = getVerificationDigit(companyRecord.nit);
  const registrationDate = dateFormatter.format(companyRecord.registrationDate);

  return (
    <article itemScope itemType="https://schema.org/Organization">
      <header className="py-8">
        <h1
          itemProp="name"
          className="font-brand text-2xl font-semibold text-brand"
        >
          {companyRecord.businessName}
        </h1>
        <div className="flex items-center gap-1">
          <h2 className="text-slate-500">NIT: {formattedNit}</h2>
          <div className="flex items-center gap-1 rounded-full px-2 text-xs font-semibold uppercase leading-5 text-green-600">
            <div className="size-2 rounded-full bg-green-600" />
            Activa
          </div>
        </div>
      </header>
      <section>
        <p>
          <strong>NIT:</strong>{" "}
          <span itemProp="taxID">{companyRecord.nit}</span>
        </p>
        <p>
          <strong>DV:</strong> {dv}
        </p>
        <p>
          <strong>Razón Social:</strong> {companyRecord.businessName}
        </p>
        <p>
          <strong>Activa:</strong> <span itemProp="isicV4">Sí</span>
        </p>
        <p>
          <strong>Categoría:</strong> {companyRecord.category}
        </p>
        <p>
          <strong>Organización Jurídica:</strong> {companyRecord.legalEntity}
        </p>
        <p>
          <strong>Fecha de Constitución:</strong>{" "}
          <time dateTime={companyRecord.registrationDate.toISOString()}>
            {registrationDate}
          </time>
        </p>
        <p>
          <strong>Antigüedad:</strong>{" "}
          {formatDistanceToNowStrict(companyRecord.registrationDate, {
            locale: es,
          })}
        </p>
        <p>
          <strong>Dirección:</strong>{" "}
          <span itemProp="address">{companyRecord.businessAddress}</span>
        </p>
        <p>
          <strong>Ciudad:</strong>{" "}
          <span itemProp="address">{companyRecord.city}</span>
        </p>
        <p>
          <strong>Departamento:</strong>{" "}
          <span itemProp="address">{companyRecord.state}</span>
        </p>
        <p>
          <strong>Tamaño de la empresa:</strong>
          <span itemProp="numberOfEmployees">{companyRecord.companySize}</span>
        </p>
        <section>
          <h2>Actividad Económica</h2>
          <ul>
            <li>{companyRecord.economicActivity1}</li>
            <li>{companyRecord.economicActivity2}</li>
            <li>{companyRecord.economicActivity3}</li>
            <li>{companyRecord.economicActivity4}</li>
          </ul>
        </section>
      </section>
    </article>
  );
}
